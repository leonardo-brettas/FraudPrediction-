version: '3.7'

services:

  app:
    image: app
    container_name: app
    expose:
      - "8080"
    ports:
      - "8080:8080"
    build:
      context: .
      dockerfile: ./application/Dockerfile
    volumes:
      - ./application:/app
    env_file:
      - ./application/.env
    depends_on:
      - redis
      - postgres
      - s3
    
  app2:
    image: app
    container_name: app2
    expose:
      - "8080"
    ports:
      - "8081:8080"
    build:
      context: .
      dockerfile: ./application/Dockerfile
    volumes:
      - ./application:/app
    env_file:
      - ./application/.env
    depends_on:
      - redis
      - postgres
      - s3

  app3:
    image: app
    container_name: app3
    expose:
      - "8080"
    ports:
      - "8082:8080"
    build:
      context: .
      dockerfile: ./application/Dockerfile
    volumes:
      - ./application:/app
    env_file:
      - ./application/.env
    depends_on:
      - redis
      - postgres
      - s3

  app4:
    image: app
    container_name: app4
    expose:
      - "8080"
    ports:
      - "8083:8080"
    build:
      context: .
      dockerfile: ./application/Dockerfile
    volumes:
      - ./application:/app
    env_file:
      - ./application/.env
    depends_on:
      - redis
      - postgres
      - s3

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - app
      - app2
      - app3
      - app4
    ports:
      - "80:80"

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    command: redis-server --maxclients 10000
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    
  postgres:
    image: postgres:latest
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: app
      POSTGRES_MAX_CONNECTIONS: 300
    volumes:
      - ./postgres-data:/var/lib/postgresql/data

  s3:
    image: minio/minio
    container_name: s3
    ports:
      - "9000:9000"
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
    volumes:
      - ./s3-data:/data
    command: server /data